{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkBA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,SAClCC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,0BAuCtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCbT,EAAKC,UAAUe,iBAAiB,UAEhC,SAAkBC,GAChBA,EAAMC,iBACN,MAAMC,EAAaC,OAAOpB,EAAKI,WAAWiB,OACtCC,EAAYF,OAAOpB,EAAKK,UAAUgB,OAClCE,EAAcH,OAAOpB,EAAKM,YAAYe,OAC5C,GAAGF,EAAa,EAEb,YADDK,EAAA1B,GAAS2B,OAAOC,KAAK,kCAGvB,GAAGJ,EAAY,EAEZ,YADDE,EAAA1B,GAAS2B,OAAOC,KAAK,iCAGvB,GAAGH,EAAc,EAEd,YADDC,EAAA1B,GAAS2B,OAAOC,KAAK,mCAGrBC,QAAQC,IAAI,mCAAmCT,EAAWG,EAAUC,GACpE,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAaM,GAAK,EACpCtB,EAAcsB,EAAI,EAAGA,EAAIP,EAAYH,GACpCW,MAAK,EAACtB,SAACA,EAAQC,MAAEA,MAChBe,EAAA1B,GAAS2B,OAAOM,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEzEuB,OAAM,EAACxB,SAACA,EAAQC,MAAEA,MACjBe,EAAA1B,GAAS2B,OAAOQ,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nconst refs = {\n  inputForm: document.querySelector(\".form\"),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\" ]'),\n}\n\n\n\n\n\nrefs.inputForm.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delayValue = Number(refs.inputDelay.value);\nconst stepValue = Number(refs.inputStep.value);\nconst amountValue = Number(refs.inputAmount.value);\nif(delayValue < 0){\n  Notiflix.Notify.info(\"Pleas input delay value from 0\");\n   return;\n};\nif(stepValue < 0){\n  Notiflix.Notify.info(\"Pleas input step value from 0\");\n   return;\n};\nif(amountValue < 1){\n  Notiflix.Notify.info(\"Pleas input amount value from 1\");\n   return;\n}\n  console.log('refs.inputForm.delay.textContent',delayValue,stepValue,amountValue)\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(i + 1, i * stepValue + delayValue)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","inputForm","document","querySelector","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","$parcel$interopDefault","Notify","info","console","log","i","then","success","catch","failure"],"version":3,"file":"03-promises.e81cfab2.js.map"}